openapi: 3.0.0
info:
  title: API Hacienda
  description: REST API for the Haciend project
  version: 1.0.0
servers:
  - url: https://localhost:3005
components:
  responses:
    404NoMatches:
      description: No matches found for the requested query
  requestBodies:
    search:
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              query:
                type: string
            required:
            - query
  securitySchemes:
    jwt:
      type: http
      scheme: bearer
      bearerFormat: JWT
      x-bearerInfoFunc: service.users.decode_token
    api_key:
      type: apiKey
      name: X-Api-Key
      in: header
      x-apikeyInfoFunc: service.utils.api_key_auth
  schemas:
    company:
      type: object
      properties:
        id_compania:
          type: string
        codigo_actividad:
          type: integer
        otras_senas:
          type: string
        cod_telefono:
          type: string
        canton:
          type: string
        distrito:
          type: string
        email:
          type: string
        ambiente:
          type: string
        cedula:
          type: string
        nombre_compania:
          type: string
        barrio:
          type: string
        password_hacienda:
          type: string
        telefono:
          type: string
        pin:
          type: string
        provincia:
          type: string
        nombre_comercial:
          type: string
        tipo_identificacion:
          type: string
        usuario_hacienda:
          type: string
        firma:
          type: string
          format: binary
        logo:
          type: string
          format: binary
        estado:
          type: string
      required:
          - logo
          - id_compania
          - codigo_actividad
          - otras_senas
          - cod_telefono
          - canton
          - distrito
          - email
          - ambiente
          - cedula
          - nombre_compania
          - barrio
          - password_hacienda
          - telefono
          - pin
          - provincia
          - nombre_comercial
          - tipo_identificacion
          - usuario_hacienda
          - firma
          - estado
    document:
      type: object
      properties:
        data:
          type: object
          properties:
            tipo:
              type: string
            nombre_usuario:
              type: string
            situacion:
              type: string
            consecutivo:
              type: string
            clave:
              type: string
            terminal:
              type: string
            sucursal:
              type: string
            fecha:
              type: string
            codigo_actividad:
              type: string
            otro_telefono:
              type: string
            condicion_venta:
              type: string
            plazo_credito:
              type: string
            num_fecha:
              type: string
            num_referencia:
              type: string
            codigo_vendedor:
              type: string
            receptor:
              type: object
              properties:
                tipo_identificacion:
                  type: string
                numero_identificacion:
                  type: string
                nombre:
                  type: string
                provincia:
                  type: string
                canton:
                  type: string
                distrito:
                  type: string
                otras_senas:
                  type: string
                cod_pais:
                  type: string
                telefono:
                  type: string
                website:
                  type: string
                correo:
                  type: string
                nombre_comercial:
                  type: string
                correo_gasto:
                  type: string
            medio_pago:
              type: array
              properties:
                codigo:
                  type: string
            detalles:
              type: array
              properties:
                numero:
                  type: string
                cantidad:
                  type: string
                codigo_comercial:
                  type: array
                  properties:
                    tipo:
                      type: string
                    codigo:
                      type: string
                unidad_medidad_comercial:
                  type: string
                unidad:
                  type: string
                detalle:
                  type: string
                precio_unitario:
                  type: string
                monto_total:
                  type: string
                descuento:
                  type: array
                  properties:
                    monto:
                      type: string
                    descripcion:
                      type: string
                subtotal:
                  type: string
                impuesto:
                  type: array
                  properties:
                    codigo_tarifa:
                      type: string
                    codigo:
                      type: string
                    tarifa:
                      type: string
                    monto:
                      type: string
                    factor_iva:
                      type: string
                impuesto_neto:
                  type: string
                total_linea:
                  type: string
                partida_arancelaria:
                  type: string
                base_imponible:
                  type: string
            codigo_moneda:
              type: object
              properties:
                tipo_moneda:
                  type: string
                tipo_cambio:
                  type: string
            total_serv_gravados:
              type: string
            total_serv_exentos:
              type: string
            total_serv_exonerado:
              type: string
            total_mercan_gravados:
              type: string
            total_mercan_exentos:
              type: string
            total_mercan_exonerada:
              type: string
            total_gravados:
              type: string
            total_exentos:
              type: string
            total_exonerados:
              type: string
            total_ventas:
              type: string
            total_descuentos:
              type: string
            total_ventas_netas:
              type: string
            total_impuestos:
              type: string
            total_iva_devuelto:
              type: string
            total_otros_cargos:
              type: string
            total_comprobante:
              type: string
            otros_cargos:
              type: array
              properties:
                tipo_documento:
                  type: string
                numero_identidad_tercero:
                  type: string
                detalle:
                  type: string
                porcentaje:
                  type: string
                monto_cargo:
                  type: string
            referencia:
              anyOf:
               - type: string
               - type: object
                 properties:
                   num_factura:
                    type: string
            otros:
              type: object
              properties:
                otro_texto:
                  type: string
                otro_contenido:
                  type: string
    mh_validations:
      type: object
      properties:
        data:
          type: object
          properties:
            id_compania:
              type: string
            clave:
              type: string
            es_consulta:
              type: boolean
          required:
            - id_compania
            - clave
            - es_consulta
      required:
        - data
    key:
      type: object
      properties:
        data:
          type: object
          properties:
            tipo:
              type: string
            nombre_usuario:
              type: string
            situacion:
              type: string
            consecutivo:
              type: string
            terminal:
              type: string
            sucursal:
              type: string
          required:
            - tipo
            - nombre_usuario
            - situacion
            - consecutivo
            - terminal
            - sucursal
      required:
        - data
    user:
      type: object
      properties:
        data:
          type: object
          properties:
            email:
              type: string
            password:
              type: string
            name:
              type: string
            idrol:
              type: integer
            idcompanies:
              type: array
              properties:
                id:
                  type: integer
              required:
                - id
          required:
            - email
            - password
            - name
            - idrol
            - idcompanies
      required:
        - data
    user_companies:
      type: object
      properties:
        email:
          type: string
        idcompanies:
          type: array
          properties:
            id:
              type: integer
          required:
            - id
      required:
        - email
        - idcompanies
    companies_smtp:
      type: object
      properties:
        data:
          type: object
          properties:
            host:
              type: string
            user:
              type: string
            password:
              type: string
            port:
              type: string
            encrypt_type:
              type: string
          required:
            - host
            - user
            - password
            - port
            - encrypt_type
      required:
        - data
    email:
      type: object
      properties:
        receivers:
          type: array
          items:
            type: string
        company_id:
          type: string
        subject:
          type: string
        content:
          type: string
        file1:
          type: string
          format: binary
        file2:
          type: string
          format: binary
        file3:
          type: string
          format: binary
      required:
        - receivers
        - company_id
        - subject
        - content
    email_mh:
      type: object
      properties:
        company_user:
          type: string
        key_mh:
          type: string
      required:
        - company_user
        - key_mh
    rspns_cabys:
      type: object
      properties:
        status:
          type: string
        cabys:
          type: array
          items:
            type: object
            properties:
              codigo:
                type: string
              descripcion:
                type: string
              impuesto:
                type: number
      required:
        - status
        - cabys
    rspns_sac:
      type: object
      properties:
        status:
          type: string
        cabysxsac:
          type: array
          items:
            type: object
            properties:
              codigocabys:
                type: string
              codigosac:
                type: string
              descripcabys:
                type: string
      required:
        - status
        - cabysxsac
    rspns_med:
      type: object
      properties:
        status:
          type: string
        medicamentos:
          type: array
          items:
            type: object
            properties:
              codigocabys:
                type: string
              principioms:
                type: string
              codigoatc:
                type: string
              principioatc:
                type: string
              descripcion:
                type: string
      required:
        - status
        - medicamentos
    rspns_person:
      type: object
      properties:
        status:
          type: string
        persona:
          type: object
          properties:
            cedula:
              type: string
            ubicacion:
              type: string
            expiracion:
              type: string
            nombre:
              type: string
            apellido1:
              type: string
            apellido2:
              type: string
      required:
        - status
        - persona
    login:
      type: object
      properties:
        email:
          type: string
        password:
          type: string
      required:
        - email
        - password
  parameters:
    debug:
        name: {{debug_switch}}
        in: query
        required: false
        description: A parameter that specifies if responses will return debug information on errors.
        schema:
            type: string
paths:
  /api/companies:
    get:
      tags:
        - companies
      operationId: routes.companies.route_list_companies
      responses:
        200:
          description: Everything is ok
        500:
          description: there was an error starting the facial recognition system
      security:
        - jwt: []
    post:
      tags:
        - companies
      summary: Creates a company.
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/company'
      operationId: routes.companies.route_save_company
      responses:
        200:
          description: Everything is ok
        500:
          description: there was an error starting the facial recognition system
      security:
        - jwt: []
    put:
      tags:
        - companies
      summary: Modify a company.
      requestBody:
        required: true
        content:
          multipart/from-data:
            schema:
              $ref: '#/components/schemas/company'
      operationId: routes.companies.route_modify_company
      responses:
        200:
          description: Everything is ok
        500:
          description: there was an error starting the facial recognition system
      security:
        - jwt: []
  /api/companies/{id}:
    get:
      tags:
        - companies
      operationId: routes.companies.route_get_company_byid
      parameters:
        - name: id
          in: path
          description: Company ID
          required: true
          schema:
            type: string
      responses:
        200:
          description: Everything is ok
        500:
          description: there was an error starting the facial recognition system
      security:
        - jwt: []
    delete:
      tags:
        - companies
      description: deletes a single company based on the id supplied
      operationId: routes.companies.route_delete_company
      parameters:
        - name: id
          in: path
          description: id of the company
          required: true
          schema:
            type: string
      responses:
        200:
          description: The company has been deleted
        500:
          description: there was an error starting the facial recognition system
      security:
        - jwt: []
  /api/consult:
    get:
      tags:
        - consult
      summary: get documents by company, key and type
      operationId: routes.documents.consult_documents
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                data:
                  type: object
                  properties:
                    id_compania:
                      type: string
                    tipo_documento:
                      type: string
                    clave:
                      type: string
      responses:
        200:
          description: Everything is ok
        500:
          description: there was an error starting the facial recognition system
  /api/documents:
    get:
      tags:
        - documents
      summary: get documents by company and type
      operationId: routes.documents.get_documents_report
      requestBody:
        required: true
        content:
          application/json:
            schema:
             properties:
               data:
                 type: object
                 properties:
                   id_compania:
                     type: string
                   tipo_documento:
                     type: string
      responses:
        200:
          description: Everything is ok
        500:
          description: there was an error starting the facial recognition system
      security:
        - jwt: []
    patch:
      tags:
        - documents
      summary: Processing documents in hacienda
      operationId: routes.documents.processing_documents
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/mh_validations'
      responses:
        200:
          description: Everything is ok
        500:
          description: there was an error starting the facial recognition system
      security:
        - api_key: []
    post:
      tags:
        - documents
      summary: Create a document (FE, NC, ND FEE).
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/document'
      operationId: routes.documents.create_documents
      responses:
        200:
          description: Everything is ok
        500:
          description: there was an error starting the facial recognition system
      security:
        - api_key: []
  /api/references/key:
    post:
      tags:
        - references
      summary: Create a document (FE, NC, ND FEE).
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/key'
      operationId: routes.references.generated_key
      responses:
        200:
          description: Everything is ok
        401:
          description: UnAuthorized Token please renew again
        500:
          description: there was an error starting the facial recognition system
      security:
        - jwt: []
  /api/users:
    post:
      tags:
        - users
      summary: Create a new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/user'
      operationId: routes.users.create_new_user
      responses:
        200:
          description: Everything is ok
        500:
          description: there was an error starting the facial recognition system
      security:
        - jwt: []
    put:
      tags:
      - users
      summary: Modify a user.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/user'
      operationId: routes.users.route_modify_user
      responses:
        200:
          description: Everything is ok
        500:
          description: there was an error starting the facial recognition system
      security:
        - jwt: []
    get:
      tags:
      - users
      summary: Get the information of all users
      operationId: routes.users.route_list_users
      responses:
        200:
          description: Everything is ok
        500:
          description: there was an error starting the facial recognition system
      security:
        - jwt: []
  /api/users/companies:
    delete:
      tags:
      - users
      summary: Delete user companies.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/user_companies'
      operationId: routes.users.route_delete_user_companies
      responses:
        200:
          description: Everything is ok
        500:
          description: there was an error starting the facial recognition system
      security:
        - jwt: []
  /api/users/{id}:
    delete:
      tags:
      - users
      description: deletes a single user based on the id supplied
      operationId: routes.users.route_delete_user
      parameters:
      - name: id
        in: path
        description: id of the user
        required: true
        schema:
          type: string
      responses:
        200:
          description: The user has been deleted
        500:
          description: there was an error starting the facial recognition system
      security:
        - jwt: []
    get:
      tags:
      - users
      description: get information of a single user based on the id supplied
      operationId: routes.users.route_get_user_byid
      parameters:
      - name: id
        in: path
        description: id of the user
        required: true
        schema:
          type: string
      responses:
        200:
          description: the information was successfully displayed
        500:
          description: there was an error starting the facial recognition system
      security:
        - jwt: []
  /api/companies/{id}/smtp:
    post:
      tags:
      - smtp data
      summary: Create a new smtp data
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/companies_smtp'
      operationId: routes.company_smtp.route_save_company_smtp
      parameters:
      - name: id
        in: path
        description: Company ID
        required: true
        schema:
          type: string
      responses:
        200:
          description: Everything is ok
        500:
          description: there was an error starting the facial recognition system
      security:
        - jwt: []
    get:
      tags:
      - smtp data
      description: get information of a single company and it smtp data based on the id supplied
      operationId: routes.company_smtp.route_get_company_smtp
      parameters:
      - name: id
        in: path
        description: id of the company
        required: true
        schema:
          type: string
      responses:
        200:
          description: the information was successfully displayed
        500:
          description: there was an error starting the facial recognition system
      security:
        - jwt: []
    delete:
      tags:
      - smtp data
      description: delete information of a single company and it smtp data based on the id supplied
      operationId: routes.company_smtp.route_delete_company_smtp
      parameters:
      - name: id
        in: path
        description: id of the company
        required: true
        schema:
          type: string
      responses:
        200:
          description: the information was successfully displayed
        500:
          description: there was an error starting the facial recognition system
      security:
        - jwt: []
    put:
      tags:
      - smtp data
      summary: Modify a smtp data
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/companies_smtp'
      operationId: routes.company_smtp.route_modify_company_smtp
      parameters:
      - name: id
        in: path
        description: Company ID
        required: true
        schema:
          type: string
      responses:
        200:
          description: Everything is ok
        500:
          description: there was an error starting the facial recognition system
      security:
        - jwt: []
  /api/email:
    post:
      tags:
      - Sent Email
      summary: Send a custom email
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/email'
      operationId: routes.email.route_send_email
      responses:
        200:
          description: Everything is ok
        500:
          description: there was an error starting the facial recognition system
      security:
        - jwt: []
    get:
      tags:
      - Sent Email
      summary: Send a email with the information of the document (FE,NC,etc)
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/email_mh'
      operationId: routes.email.send_email_fe
      responses:
        200:
          description: Everything is ok
          content:
            'application/json':
              schema:
                type: string
        401:
          description: UnAuthorized Token please renew again
        500:
          description: there was an error starting the facial recognition system
      security:
        - jwt: []
  /api/auth:
    get:
      tags:
      - Auth
      summary: Login into API
      operationId: routes.users.login
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/login'

      responses:
        '200':
          description: JWT token
          content:
            'application/json':
              schema:
                type: string
      security:
        - api_key: []
  /cabys/meds:
    get:
      tags:
        - cabys
      summary: Performs a search on the medicaments collection returning matches for the requested query.
      operationId: routes.cabys.search_meds
      # this body could be a query parameter instead...?
      # parameters:
      # - name: search
      #   in: query
      #   schema:
      #     type: string
      requestBody:
        $ref: '#/components/requestBodies/search'
      responses:
        200:
          description: Matches found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rspns_med'
        404:
          $ref: '#/components/responses/404NoMatches'
      security:
        - api_key: []
  /cabys/sacs:
    get:
      tags:
        - cabys
      summary: Finds the specified SAC code(s) using the given Cabys code from the CabysXSac collection.
      operationId: routes.cabys.find_sacs_by_cabys
      # again... this body could be a query parameter, maybe...
      # parameters:
      # - name: cabys
      #   in: query
      #   schema:
      #     type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                cabys:
                  type: string
              required:
              - cabys
      responses:
        200:
          description: Matches found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rspns_sac'
        400:
          $ref: '#/components/responses/404NoMatches'
      security:
        - api_key: []
  /cabys/goods:
    get:
      tags:
        - cabys
      summary: Performs a search on the cabys collection returning matches for the requested query.
      operationId: routes.cabys.search_cabys
      # once more, this body could be a query parameter... prolly... heck, it's even used more than just once, so it could be placed in components:
      # components:
      #   parameters:
      #     param_search:
      #       name: search
      #       in: query
      #       schema:
      #         type: string
      # just call it here:
      # parameters:
      # - $ref: '#/components/parameters/param_search'
      # but, whatever, already made a requestBody component, so might as well use it
      requestBody:
        $ref: '#/components/requestBodies/search'
      responses:
        200:
          description: Matches found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rspns_cabys'
        404:
          $ref: '#/components/responses/404NoMatches'
      security:
        - api_key: []
  /registry/persons/{id}:
    get:
      tags:
      - registry
      summary: Obtains the specified person from the registry collection.
      operationId: routes.registry.route_get_person
      parameters:
        - name: id
          in: path
          description: The ID number for the person to get info from.
          required: true
          schema:
            type: string
      responses:
        200:
          description: Person found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rspns_person'
        404:
          description: Person not found
      security:
        - api_key: []
  /comprobantes:
    get:
      tags:
        - vouchers
      summary: Obtains a collection of vouchers.
      operationId: routes.documents.route_get_vouchers
      parameters:
        - in: query
          name: emisor
          schema:
            type: string
        - in: query
          name: receptor
          schema:
            type: string
        - in: query
          name: limit
          schema:
            type: integer
        - in: query
          name: offset
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                data:
                  type: object
                  properties:
                    id_compania:
                      type: string
      responses:
        200:
          description: vouchers found
        206:
          description: vouchers found
        404:
          description: vouchers not found
  /comprobantes/{clave}:
    get:
      tags:
      - voucher
      summary: Obtains a single voucher.
      operationId: routes.documents.route_get_voucher_byid
      parameters:
        - in: path
          name: clave
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                data:
                  type: object
                  properties:
                    id_compania:
                      type: string
      responses:
        200:
          description: voucher found
        404:
          description: voucher not found
      security:
        - api_key: []
tags:
  - name: companies
    description: Everything about your Companies
  - name: documents
    description: Everything about your documents
  - name: references
    description: Everything about your references data
